{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Lambda/todo/front-end/src/components/Todo/Task.jsx\";\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../../sass/Todo/Task.scss';\n\nconst Task = props => {\n  const incomplete = 'danger';\n  const complete = 'success';\n  const [status, setStatus] = useState(incomplete);\n\n  const clickButton = () => {\n    const {\n      id\n    } = props.task;\n\n    if (status === incomplete) {\n      const updatedTask = {\n        id: id,\n        task: props.task.task,\n        completed: !props.task.completed\n      };\n      props.toggleCompleted(id, updatedTask);\n      setStatus(complete);\n      props.soundbites.completed.play();\n    } else {\n      const updatedTask = {\n        id: id,\n        task: props.task.task,\n        completed: !props.task.completed\n      };\n      props.toggleCompleted(id, updatedTask);\n      setStatus(incomplete);\n      props.soundbites.incomplete.play();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: status,\n    onClick: clickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }\n  }, props.task.task)));\n};\n\nexport default Task;","map":{"version":3,"sources":["/Users/user/Documents/Lambda/todo/front-end/src/components/Todo/Task.jsx"],"names":["React","useState","Button","Task","props","incomplete","complete","status","setStatus","clickButton","id","task","updatedTask","completed","toggleCompleted","soundbites","play"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,2BAAP;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,UAAU,GAAG,QAAnB;AACA,QAAMC,QAAQ,GAAG,SAAjB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACI,UAAD,CAApC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AAEtB,UAAM;AAAEC,MAAAA;AAAF,QAASN,KAAK,CAACO,IAArB;;AAEA,QAAIJ,MAAM,KAAKF,UAAf,EAA2B;AACvB,YAAMO,WAAW,GAAG;AAChBF,QAAAA,EAAE,EAAEA,EADY;AAEhBC,QAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWA,IAFD;AAGhBE,QAAAA,SAAS,EAAE,CAACT,KAAK,CAACO,IAAN,CAAWE;AAHP,OAApB;AAKAT,MAAAA,KAAK,CAACU,eAAN,CAAsBJ,EAAtB,EAA0BE,WAA1B;AACAJ,MAAAA,SAAS,CAACF,QAAD,CAAT;AACAF,MAAAA,KAAK,CAACW,UAAN,CAAiBF,SAAjB,CAA2BG,IAA3B;AACH,KATD,MAUK;AACD,YAAMJ,WAAW,GAAG;AAChBF,QAAAA,EAAE,EAAEA,EADY;AAEhBC,QAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,CAAWA,IAFD;AAGhBE,QAAAA,SAAS,EAAE,CAACT,KAAK,CAACO,IAAN,CAAWE;AAHP,OAApB;AAKAT,MAAAA,KAAK,CAACU,eAAN,CAAsBJ,EAAtB,EAA0BE,WAA1B;AACAJ,MAAAA,SAAS,CAACH,UAAD,CAAT;AACAD,MAAAA,KAAK,CAACW,UAAN,CAAiBV,UAAjB,CAA4BW,IAA5B;AACH;AACJ,GAxBD;;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAET,MADb;AAEI,IAAA,OAAO,EAAEE,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACO,IAAN,CAAWA,IAAf,CAHL,CADJ,CADJ;AAQH,CAxCD;;AA0CA,eAAeR,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport '../../sass/Todo/Task.scss';\n\n\nconst Task = (props) => {\n    const incomplete = 'danger';\n    const complete = 'success';\n\n    const [status, setStatus] = useState(incomplete);\n\n    const clickButton = () => {\n\n        const { id } = props.task;\n        \n        if (status === incomplete) {\n            const updatedTask = {\n                id: id,\n                task: props.task.task,\n                completed: !props.task.completed\n            };\n            props.toggleCompleted(id, updatedTask);\n            setStatus(complete);\n            props.soundbites.completed.play();\n        }\n        else {\n            const updatedTask = {\n                id: id,\n                task: props.task.task,\n                completed: !props.task.completed\n            }\n            props.toggleCompleted(id, updatedTask);\n            setStatus(incomplete);\n            props.soundbites.incomplete.play();\n        }\n    }\n\n    return (\n        <div className='Task'>\n            <Button \n                variant={status} \n                onClick={clickButton}\n                ><p>{props.task.task}</p></Button>\n        </div>\n    );\n};\n\nexport default Task;"]},"metadata":{},"sourceType":"module"}