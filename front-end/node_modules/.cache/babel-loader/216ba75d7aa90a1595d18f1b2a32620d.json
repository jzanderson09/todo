{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/Lambda/todo/front-end/src/components/Todo/Todo.jsx\";\nimport React, { useState } from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport '../../sass/Todo/Todo.scss'; // Components:\n\nimport Task from './Task';\n\nconst Todo = props => {\n  const [newTask, setNewTask] = useState('');\n\n  const changeHandler = e => {\n    setNewTask(e.target.value);\n  };\n\n  const addNewTask = e => {\n    e.preventDefault();\n    props.addTask(newTask);\n    setNewTask('');\n  }; // When there are tasks in the todoList:\n\n\n  if (props.todoList.length > 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        width: '100%',\n        margin: '1% auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"Tasks:\"), props.todoList.map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task.id,\n      completeTasks: props.completeTasks,\n      soundbites: props.soundbites,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: addNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      placeholder: \"I need to...\",\n      value: newTask,\n      onChange: changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      style: {\n        margin: '3%'\n      },\n      onClick: addNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"optn-btns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: props.clearSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, \"Clear Selected\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: props.confirmClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Complete Selected\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: props.selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Select All\"))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"No current tasks!\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"You did everything!\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: addNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"task\",\n      placeholder: \"I need to...\",\n      value: newTask,\n      onChange: changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      style: {\n        margin: '3%'\n      },\n      onClick: addNewTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"optn-btns-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      onClick: props.clearSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, \"Clear Selected\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: props.confirmClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, \"Complete Selected\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: props.selectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Select All\"))));\n  }\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/user/Documents/Lambda/todo/front-end/src/components/Todo/Todo.jsx"],"names":["React","useState","Jumbotron","Button","Task","Todo","props","newTask","setNewTask","changeHandler","e","target","value","addNewTask","preventDefault","addTask","todoList","length","width","margin","map","task","id","completeTasks","soundbites","clearSelected","confirmClear","selectAll"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport '../../sass/Todo/Todo.scss';\n\n// Components:\nimport Task from './Task';\n\nconst Todo = props => {\n    const [newTask, setNewTask] = useState('');\n\n    const changeHandler = e => {\n        setNewTask(e.target.value);\n    };\n\n    const addNewTask = e => {\n        e.preventDefault();\n        props.addTask(newTask);\n        setNewTask('');\n    };\n\n    // When there are tasks in the todoList:\n    if (props.todoList.length > 0) {\n        return (\n            <div className='Todo'>\n                <Jumbotron>\n                    <h1 style={{ width: '100%', \n                        margin: '1% auto'\n                    }}>Tasks:</h1>\n                    {props.todoList.map(task => \n                        <Task \n                            key={task.id} \n                            completeTasks={props.completeTasks}\n                            soundbites={props.soundbites}\n                            task={task}\n                        /> \n                    )}\n                    <form onSubmit={addNewTask}>\n                        <input \n                            type='text'\n                            name='task'\n                            placeholder='I need to...'\n                            value={newTask}\n                            onChange={changeHandler}\n                        />\n                        <Button \n                            variant='info' \n                            style={{ margin: '3%' }}\n                            onClick={addNewTask}\n                        >Submit</Button>\n                    </form>\n                    <div className='optn-btns'>\n                        <Button variant='light' onClick={props.clearSelected}>Clear Selected</Button>\n                        <Button variant='success' onClick={props.confirmClear}>Complete Selected</Button>\n                        <Button variant='dark' onClick={props.selectAll}>Select All</Button>\n                    </div>\n                </Jumbotron>            \n            </div>\n        );\n    }\n    else {\n        return (\n            <div className='Todo'>\n                <Jumbotron>\n                    <h1>No current tasks!</h1>\n                    <h3>You did everything!</h3>\n                    <form onSubmit={addNewTask}>\n                        <input \n                            type='text'\n                            name='task'\n                            placeholder='I need to...'\n                            value={newTask}\n                            onChange={changeHandler}\n                        />\n                        <Button \n                            variant='info' \n                            style={{ margin: '3%' }}\n                            onClick={addNewTask}\n                        >Submit</Button>\n                    </form>\n                    <div className='optn-btns-div'>\n                        <Button variant='light' onClick={props.clearSelected}>Clear Selected</Button>\n                        <Button variant='success' onClick={props.confirmClear}>Complete Selected</Button>\n                        <Button variant='dark' onClick={props.selectAll}>Select All</Button>\n                    </div>\n                </Jumbotron>            \n            </div>\n        );\n    }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}